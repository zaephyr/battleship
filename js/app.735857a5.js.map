{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?d073","webpack:///./src/components/TheGame.vue?0517","webpack:///src/components/TheGame.vue","webpack:///./src/components/TheGame.vue?3727","webpack:///./src/components/TheGame.vue","webpack:///src/App.vue","webpack:///./src/App.vue?a7d1","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/components/TheGame.vue?186f"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","gameFlow","player","computer","createShip","shipFactory","isCoordValid","on","resetGame","staticRenderFns","staticClass","_v","_s","playerShipsAlive","class","active","playerTurn","gameStarted","_l","Math","pow","MAX","_","keys","MIN","stringifiedCoords","ship","index","gridSnap","placingShips","moveCursor","style","top","position","y","left","x","width","direction","height","opacity","toString","rotateShip","compShipsAlive","$event","playerAttack","_e","winner","$emit","component","Vue","config","productionTip","render","h","App","$mount"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,eAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,4ICvJL,EAAS,WAAa,IAAIyC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,cAAc,CAACF,EAAG,eAAe,CAACE,MAAM,CAAC,SAAWN,EAAIO,SAAS,OAASP,EAAIQ,OAAO,SAAWR,EAAIS,SAAS,WAAaT,EAAIU,WAAW,YAAcV,EAAIW,YAAY,aAAeX,EAAIY,cAAcC,GAAG,CAAC,UAAYb,EAAIc,cAAc,IAC5VC,EAAkB,GCDlB,G,kDAAS,WAAa,IAAIf,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACY,YAAY,SAAS,CAACZ,EAAG,MAAM,CAACY,YAAY,eAAe,CAACZ,EAAG,KAAK,CAACJ,EAAIiB,GAAG,WAAWjB,EAAIkB,GAAGlB,EAAImB,qBAAqBf,EAAG,MAAM,CAACY,YAAY,cAAcI,MAAM,CAAEC,QAASrB,EAAIO,SAASe,YAActB,EAAIO,SAASgB,cAAe,CAACvB,EAAIwB,GAAIC,KAAKC,IAAI1B,EAAI2B,IAAM,EAAG,IAAI,SAASC,EAAEnF,GAAG,OAAO2D,EAAG,MAAM,CAACd,IAAIU,EAAI6B,KAAK7B,EAAI8B,IAAMrF,GAAGuE,YAAY,QAAQV,MAAM,CAAC,oBAAoBN,EAAI+B,kBAAkB/B,EAAI8B,IAAMrF,SAAQuD,EAAIwB,GAAIxB,EAAIQ,OAAY,OAAE,SAASwB,EAAKC,GAAO,OAAO7B,EAAG,MAAM,CAACd,IAAI2C,EAAMjB,YAAY,OAAOI,MAAM,CACrlBc,SAAUlC,EAAIO,SAAS4B,aACvBC,WAAYpC,EAAIO,SAAS4B,cAC3BE,MAAM,CACJC,IAA0B,GAArBN,EAAKO,SAAS,GAAGC,EAAS,KAC/BC,KAA2B,GAArBT,EAAKO,SAAS,GAAGG,EAAS,KAChCC,MAAyB,cAAlBX,EAAKY,UAA0C,GAAdZ,EAAKrF,OAAc,KAAO,OAClEkG,OAA0B,YAAlBb,EAAKY,UAAwC,GAAdZ,EAAKrF,OAAc,KAAO,OACjEmG,QAAS,OACVxC,MAAM,CAAC,GAAK2B,EAAM,cAAcD,EAAKrF,OAAO,iBAAiBqF,EAAKY,UAAU,cAAcZ,EAAKO,SAAS,GAAGC,EAAEO,WAAaf,EAAKO,SAAS,GAAGG,EAAEK,YAAYlC,GAAG,CAAC,SAAWb,EAAIgD,kBAAiB,KAAK5C,EAAG,MAAM,CAACY,YAAY,aAAa,CAACZ,EAAG,KAAK,CAACJ,EAAIiB,GAAG,aAAajB,EAAIkB,GAAGlB,EAAIiD,mBAAmB7C,EAAG,MAAM,CAACY,YAAY,gBAAgBI,MAAM,CAAEC,OAAQrB,EAAIO,SAASgB,aAAevB,EAAIO,SAASe,aAActB,EAAIwB,GAAIC,KAAKC,IAAI1B,EAAI2B,IAAM,EAAG,IAAI,SAASC,EAAEnF,GAAG,OAAO2D,EAAG,MAAM,CAACd,IAAIU,EAAI6B,KAAK7B,EAAI8B,IAAMrF,GAAGuE,YAAY,SAASV,MAAM,CAAC,aAAaN,EAAI+B,kBAAkB/B,EAAI8B,IAAMrF,IAAIoE,GAAG,CAAC,SAAS,SAASqC,GAAQ,OAAOlD,EAAImD,aAAaD,UAAc,OAAO9C,EAAG,MAAM,CAAGJ,EAAIO,SAASgB,YAEjmBvB,EAAIoD,KAF0mBhD,EAAG,SAAS,CAACS,GAAG,CAAC,MAAQ,SAASqC,GAAQlD,EAAIO,SAASgB,aAAc,EACnvBvB,EAAIO,SAASe,YAAa,EAC1BtB,EAAIO,SAAS4B,cAAe,KAAU,CAACnC,EAAIiB,GAAG,kBAA4BjB,EAAIO,SAAoB,YAAEH,EAAG,SAAS,CAACS,GAAG,CAAC,MAAQ,SAASqC,GAAQlD,EAAIO,SAASgB,aAAc,EACzKvB,EAAIO,SAAS4B,cAAe,EAC5BnC,EAAIO,SAAS8C,QAAS,EACtBrD,EAAIO,SAASe,YAAa,EAC1BtB,EAAIsD,MAAM,gBAAiB,CAACtD,EAAIiB,GAAG,kBAAkBjB,EAAIoD,WACrE,EAAkB,G,yJC6DtB,GACE,MAAF,CACI,SAAJ,CACM,KAAN,OACM,UAAN,GAEI,OAAJ,CACM,KAAN,OACM,UAAN,GAEI,SAAJ,CACM,KAAN,OACM,UAAN,GAEI,WAAJ,CACM,KAAN,UAEI,YAAJ,CACM,KAAN,UAEI,aAAJ,CACM,KAAN,WAGE,KAxBF,WAyBI,MAAJ,CACM,IAAN,EACM,IAAN,EACM,eAAN,6BACM,iBAAN,2BACM,kBAAN,GACM,qBAAN,KAIE,QAnCF,WAqDI,IAAJ,kBACM,KAAN,kDAGI,IAGJ,EACA,EAJA,OACA,IACA,IAII,IAAJ,aACA,WACM,UAAN,CACA,oBACQ,QAAR,qBAAU,EAAV,GAAU,EAAV,MACQ,MAAR,IACQ,eAAR,EAAU,EAAV,EAAU,EAAV,IACQ,OAAR,WAEA,wBACQ,YAAR,SACQ,YAAR,CAAU,IAAV,EAAU,KAAV,EAAU,OAAV,EAAU,MAAV,GACQ,SAAR,KAGM,SAAN,IAEA,2BACM,IAAN,uCACA,0CACM,GAAN,KACM,GAAN,KACM,EAAN,SAEM,EAAN,sDACA,8BACM,EAAN,CACA,4EACA,8EAGM,IAAN,iBACQ,GAAR,aACA,iBACU,EAAV,KACA,4EACA,YACA,wDACA,YAEA,gBACU,EAAV,KACA,8EACA,kFAKA,yBACM,IAAN,uBACA,+CAEA,wCACA,mCACA,mCACA,kBACA,kBAEM,GAAN,MACQ,EAAR,6BACA,MAIA,KACQ,IAAR,gBACU,EAAV,+BALQ,IAAR,gBACU,EAAV,0BAQM,EAAN,sDAEM,MAAN,qDAEM,EAAN,sEAEM,EAAN,EACM,EAAN,MAGE,QAAF,CACI,WADJ,SACA,GACM,IAAN,0BAAM,CACA,IAAN,8BACA,sDAEA,+CACA,oDACA,oDAEM,GAAN,MAAM,CAEN,MAIA,KACQ,IAAR,gBACU,KAAV,+BALQ,IAAR,gBACU,KAAV,0BAQM,GAAN,EAEM,KAAN,4DAvBM,IAAN,EAyBA,CACA,sBACA,sBAFM,EAAN,mBAzBA,KAyBM,EAAN,oBAzBA,QA8BI,aA/BJ,SA+BA,GAAM,IAAN,OACM,IAAN,8BACQ,EAAR,6BACQ,IAAR,qCACA,kCAEA,OAGA,OACU,EAAV,uBACU,KAAV,uBACU,KAAV,mBAEA,sBACY,EAAZ,UACA,gBACc,KAAd,kBAEA,yBACgB,KAAhB,wBACgB,KAAhB,mBACgB,MAAhB,aAGc,EAAd,+BACgB,IAAhB,kBAAkB,EAAlB,KAAkB,EAAlB,OACA,yDACgB,EAAhB,kBAQgB,IANA,IAAhB,GACA,CAAkB,EAAlB,OAAkB,EAAlB,MACA,CAAkB,EAAlB,OAAkB,EAAlB,MACA,CAAkB,EAAlB,KAAkB,EAAlB,QACA,CAAkB,EAAlB,KAAkB,EAAlB,SAEA,aACkB,IAAlB,SACA,SACkB,GAAlB,gBAAoB,EAApB,EAAoB,EAApB,KAEA,+BACsB,IAAtB,uBACA,yDACsB,EAAtB,gBACsB,EAAtB,6BAOU,EAAV,0BAKI,aAxFJ,WAwFM,IAAN,OACA,aACQ,IAAR,kEACQ,OAAR,wBAEA,MACA,iBACA,iBAEM,MAAN,CAAQ,EAAR,EAAQ,EAAR,IAGI,eApGJ,WAoGM,IAAN,OAEM,GADA,KAAN,wBACA,yBAAM,CAGA,IAAN,sBACA,MACA,MAEM,EAAN,CAmCQ,GAlCR,qCACU,EAAV,+BACU,EAAV,+BACA,+DACY,GAAZ,EACA,+DACY,GAAZ,EACA,+DACY,GAAZ,EACA,iEACY,GAAZ,IAEA,sCACU,EAAV,gEACU,EAAV,gEACA,wCACA,+DACc,GAAd,EACA,+DACc,GAAd,EAGc,GAAd,iCAEA,0CACA,+DACc,GAAd,EACA,+DACc,GAAd,EAEc,GAAd,mCAIA,gCACU,KAAV,yBAEU,KAAV,sFACU,KAAV,uBAEU,IAAV,kBAAY,EAAZ,EAAY,EAAZ,IACA,gEAOU,OALA,EAAV,iCACU,EAAV,sBACU,EAAV,2BACU,EAAV,iBAGA,0CAAU,WACE,EAAZ,mFACY,EAAZ,uDACY,EAAZ,2BACc,EAAd,EACc,EAAd,EACc,KAAd,4BAGY,IAAZ,kBAAc,EAAd,EAAc,EAAd,IACA,gEAEY,EAAZ,iCACY,EAAZ,sBACY,EAAZ,sBACY,EAAZ,gBAEA,qCACc,EAAd,wBACc,EAAd,oDACgB,EAAhB,gBAAkB,EAAlB,KAAkB,EAAlB,OACgB,EAAhB,8DAEgB,EAAhB,gCASgB,IAPA,IAAhB,GACA,CAAkB,EAAlB,OAAkB,EAAlB,MACA,CAAkB,EAAlB,OAAkB,EAAlB,MACA,CAAkB,EAAlB,KAAkB,EAAlB,QACA,CAAkB,EAAlB,KAAkB,EAAlB,SAGA,aACkB,IAAlB,SACA,SACkB,GAAlB,gBAAoB,EAApB,EAAoB,EAApB,KACA,6BACsB,IAAtB,uBACA,gEACsB,EAAtB,iCACsB,EAAtB,sBACsB,EAAtB,gBACsB,EAAtB,uBAEA,4DACA,2BACA,uDACA,QAMc,EAAd,qBArDU,GAwDV,4BACU,KAAV,wBACU,KAAV,mBACU,MAAV,kBAEQ,EAAR,oBACQ,EAAR,IACQ,EAAR,WACA,6BAIE,SAAF,CACI,OADJ,WAGM,IADA,IAAN,KACA,2BACQ,IAAR,+BACU,EAAV,MAAY,EAAZ,EAAY,EAAZ,IAGM,OAAN,GAEI,KAVJ,WAWM,OAAN,+BAAQ,MAAR,+CAEI,kBAbJ,WAcM,OAAN,6BAAQ,OAAR,wBC7ciV,I,wBCQ7UG,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,EAAAA,E,QCHf,GACE,KADF,WAEI,MAAJ,CACM,SAAN,CACQ,YAAR,EACQ,cAAR,EACQ,aAAR,EACQ,QAAR,GAEM,OAAN,oBACM,SAAN,sBAGE,WAAF,CACI,WAAJ,GAEE,QAAF,CACI,UADJ,WAEM,KAAN,2BACM,KAAN,8BAEI,eALJ,WAMM,OAAN,8BAEI,cARJ,WASM,OAAN,mBAEI,YAXJ,SAWA,GACA,KACQ,EAAR,EACA,OACQ,EAAR,GAIM,IAAN,KACM,EAAN,SACM,EAAN,QAEM,IAAN,cACQ,EAAR,MAGA,aACQ,IAAR,cACU,OAAV,MAEQ,OAAR,YAEM,MAAN,CAAQ,GAAR,EAAQ,IAAR,EAAQ,IAAR,EAAQ,OAAR,IAEI,aAnCJ,YAmCM,IAAN,YACA,cAAQ,OAAR,YAEA,cACQ,OAAR,sCACA,MAIM,OAAN,YAEI,gBA9CJ,SA8CA,SACM,GAAN,GAEQ,IAAR,qBACU,GAAV,cACY,OAAZ,EAKQ,IAAR,yBACU,GAAV,mBAAY,EAAZ,MAAY,EAAZ,qBACY,OAAZ,EAKQ,IAAR,yBACU,GAAV,mBAAY,EAAZ,MAAY,EAAZ,qBACY,OAAZ,EAKQ,QAAR,mBAAU,EAAV,IAAU,EAAV,+BAKA,mBAAU,EAAV,IAAU,EAAV,4BAUM,IAAN,sBACQ,GAAR,cACU,OAAV,EAKM,IAAN,0BACQ,GAAR,mBAAU,EAAV,EAAU,EAAV,yBACU,OAAV,EAKM,IAAN,0BACQ,GAAR,mBAAU,EAAV,EAAU,EAAV,yBACU,OAAV,EAKM,QAAN,mBAAQ,EAAR,MAAQ,EAAR,6BAKA,mBAAQ,EAAR,MAAQ,EAAR,2BAOI,YAtHJ,SAsHA,IAtHA,EAsHA,GAAM,IAAN,YACM,GAAN,sBAAQ,EAAR,EAAQ,EAAR,KACQ,IAAR,GAAU,EAAV,EAAU,EAAV,GACA,KAAU,EAAV,EAAU,EAAV,YAAU,EAAV,UAAU,EAAV,GAEQ,OAAR,oDAEM,OAAN,GAEI,UA/HJ,SA+HA,KACM,IAAN,GACQ,MAAR,EACQ,MAAR,EACQ,MAAR,EACQ,MAAR,GAEA,uBACM,OAAN,cAEI,WAzIJ,SAyIA,WACM,IAAN,IAEM,EAAN,UACM,EAAN,aAIM,IAAN,oBACA,MACU,EAAV,kBACU,EAAV,cACA,CACA,CAAY,EAAZ,MAAY,EAAZ,GACA,CAAY,EAAZ,MAAY,EAAZ,GACA,CAAY,EAAZ,IAAY,EAAZ,KACA,CAAY,EAAZ,IAAY,EAAZ,OAWA,OACU,EAAV,cACU,EAAV,kBACA,CACA,CAAY,EAAZ,IAAY,EAAZ,KACA,CAAY,EAAZ,IAAY,EAAZ,KACA,CAAY,EAAZ,EAAY,EAAZ,OACA,CAAY,EAAZ,EAAY,EAAZ,UAaI,cAxLJ,SAwLA,MAxLA,EAwLA,KAAM,IAAN,YACM,GAAN,sBAAQ,EAAR,EAAQ,EAAR,OACA,qBACU,KAAV,wBACU,IAAV,uBACU,EAAV,QAKI,aAlMJ,WAoMM,IAFA,IAAN,OACA,KACA,cACQ,EAAR,SACQ,IAAR,iBACU,EAAV,YAIM,IAAN,wBACA,GACQ,MAAR,EACQ,MAAR,EACQ,MAAR,EACQ,MAAR,GAEA,IACA,KACA,IA4BM,OA1BA,EAAN,qBACQ,IAAR,qBACA,qBAEA,oBAEQ,OAAR,kCAAU,EAAV,EAAU,EAAV,MACU,EAAV,mBACU,EAAV,mBACU,EAAV,kBAGQ,GAAR,kCAAU,EAAV,EAAU,EAAV,OACU,EAAV,oCAAY,EAAZ,EAAY,EAAZ,QAEU,IAAV,GAAY,EAAZ,EAAY,EAAZ,GACA,KAAY,EAAZ,EAAY,EAAZ,QAAY,EAAZ,MAAY,EAAZ,GACU,EAAV,MACY,OAAZ,EACY,UAAZ,0BACY,SAAZ,QAEU,GAAV,EACU,GAAV,MAGA,CAAQ,QAAR,EAAQ,MAAR,EAAQ,eAAR,EAAQ,UAAR,MChR8T,ICO1T,EAAY,eACd,EACA,EACAxC,GACA,EACA,KACA,KACA,MAIa,I,QCffyC,OAAIC,OAAOC,eAAgB,EAE3B,IAAIF,OAAI,CACNG,OAAQ,SAAAC,GAAC,OAAIA,EAAEC,MACdC,OAAO,S,kCCPV,yBAA8c,EAAG,G","file":"js/app.735857a5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/battleship/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"container\"}},[_c('app-the-game',{attrs:{\"gameFlow\":_vm.gameFlow,\"player\":_vm.player,\"computer\":_vm.computer,\"createShip\":_vm.createShip,\"shipFactory\":_vm.shipFactory,\"isCoordValid\":_vm.isCoordValid},on:{\"resetGame\":_vm.resetGame}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"grids\"},[_c('div',{staticClass:\"player-side\"},[_c('h2',[_vm._v(\"Player: \"+_vm._s(_vm.playerShipsAlive))]),_c('div',{staticClass:\"player-grid\",class:{ active: !_vm.gameFlow.playerTurn && _vm.gameFlow.gameStarted }},[_vm._l((Math.pow(_vm.MAX + 1, 2)),function(_,i){return _c('div',{key:_vm.keys[_vm.MIN + i],staticClass:\"place\",attrs:{\"data-player-coord\":_vm.stringifiedCoords[_vm.MIN + i]}})}),_vm._l((_vm.player.ships),function(ship,index){return _c('div',{key:index,staticClass:\"ship\",class:{\n                        gridSnap: _vm.gameFlow.placingShips,\n                        moveCursor: _vm.gameFlow.placingShips,\n                    },style:({\n                        top: ship.position[0].y * 50 + 'px',\n                        left: ship.position[0].x * 50 + 'px',\n                        width: ship.direction == 'horizontal' ? ship.length * 50 + 'px' : '50px',\n                        height: ship.direction == 'vertical' ? ship.length * 50 + 'px' : '50px',\n                        opacity: '0.7',\n                    }),attrs:{\"id\":index,\"data-length\":ship.length,\"data-direction\":ship.direction,\"data-coords\":ship.position[0].y.toString() + ship.position[0].x.toString()},on:{\"dblclick\":_vm.rotateShip}})})],2)]),_c('div',{staticClass:\"comp-side\"},[_c('h2',[_vm._v(\"Computer: \"+_vm._s(_vm.compShipsAlive))]),_c('div',{staticClass:\"computer-grid\",class:{ active: _vm.gameFlow.gameStarted && _vm.gameFlow.playerTurn }},_vm._l((Math.pow(_vm.MAX + 1, 2)),function(_,i){return _c('div',{key:_vm.keys[_vm.MIN + i],staticClass:\"square\",attrs:{\"data-coord\":_vm.stringifiedCoords[_vm.MIN + i]},on:{\"~click\":function($event){return _vm.playerAttack($event)}}})}),0)])]),_c('div',[(!_vm.gameFlow.gameStarted)?_c('button',{on:{\"click\":function($event){_vm.gameFlow.gameStarted = true;\n                _vm.gameFlow.playerTurn = true;\n                _vm.gameFlow.placingShips = false;}}},[_vm._v(\" Start Game \")]):_vm._e(),(_vm.gameFlow.gameStarted)?_c('button',{on:{\"click\":function($event){_vm.gameFlow.gameStarted = false;\n                _vm.gameFlow.placingShips = true;\n                _vm.gameFlow.winner = false;\n                _vm.gameFlow.playerTurn = false;\n                _vm.$emit('resetGame');}}},[_vm._v(\" Reset Game \")]):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <div class=\"grids\">\r\n            <div class=\"player-side\">\r\n                <h2>Player: {{ playerShipsAlive }}</h2>\r\n                <div class=\"player-grid\" :class=\"{ active: !gameFlow.playerTurn && gameFlow.gameStarted }\">\r\n                    <div\r\n                        class=\"place\"\r\n                        v-for=\"(_, i) in Math.pow(MAX + 1, 2)\"\r\n                        :key=\"keys[MIN + i]\"\r\n                        :data-player-coord=\"stringifiedCoords[MIN + i]\"\r\n                    ></div>\r\n                    <div\r\n                        v-for=\"(ship, index) in player.ships\"\r\n                        :id=\"index\"\r\n                        :key=\"index\"\r\n                        :data-length=\"ship.length\"\r\n                        :data-direction=\"ship.direction\"\r\n                        :data-coords=\"ship.position[0].y.toString() + ship.position[0].x.toString()\"\r\n                        :style=\"{\r\n                            top: ship.position[0].y * 50 + 'px',\r\n                            left: ship.position[0].x * 50 + 'px',\r\n                            width: ship.direction == 'horizontal' ? ship.length * 50 + 'px' : '50px',\r\n                            height: ship.direction == 'vertical' ? ship.length * 50 + 'px' : '50px',\r\n                            opacity: '0.7',\r\n                        }\"\r\n                        class=\"ship\"\r\n                        :class=\"{\r\n                            gridSnap: gameFlow.placingShips,\r\n                            moveCursor: gameFlow.placingShips,\r\n                        }\"\r\n                        @dblclick=\"rotateShip\"\r\n                    ></div>\r\n                </div>\r\n            </div>\r\n            <div class=\"comp-side\">\r\n                <h2>Computer: {{ compShipsAlive }}</h2>\r\n                <div class=\"computer-grid\" :class=\"{ active: gameFlow.gameStarted && gameFlow.playerTurn }\">\r\n                    <div\r\n                        class=\"square\"\r\n                        v-for=\"(_, i) in Math.pow(MAX + 1, 2)\"\r\n                        :key=\"keys[MIN + i]\"\r\n                        :data-coord=\"stringifiedCoords[MIN + i]\"\r\n                        @click.once=\"playerAttack\"\r\n                    ></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <button\r\n                v-if=\"!gameFlow.gameStarted\"\r\n                @click=\"\r\n                    gameFlow.gameStarted = true;\r\n                    gameFlow.playerTurn = true;\r\n                    gameFlow.placingShips = false;\r\n                \"\r\n            >\r\n                Start Game\r\n            </button>\r\n            <button\r\n                v-if=\"gameFlow.gameStarted\"\r\n                @click=\"\r\n                    gameFlow.gameStarted = false;\r\n                    gameFlow.placingShips = true;\r\n                    gameFlow.winner = false;\r\n                    gameFlow.playerTurn = false;\r\n                    $emit('resetGame');\r\n                \"\r\n            >\r\n                Reset Game\r\n            </button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport interact from 'interactjs';\r\nexport default {\r\n    props: {\r\n        gameFlow: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        player: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        computer: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        createShip: {\r\n            type: Function,\r\n        },\r\n        shipFactory: {\r\n            type: Function,\r\n        },\r\n        isCoordValid: {\r\n            type: Function,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            MIN: 0,\r\n            MAX: 9,\r\n            compShipsAlive: this.computer.numOfLiveShips,\r\n            playerShipsAlive: this.player.numOfLiveShips,\r\n            compAttackOptions: [],\r\n            lastSuccesfullAttack: [],\r\n        };\r\n    },\r\n\r\n    mounted() {\r\n        // for (let y = this.MIN; y <= this.MAX; y++) {\r\n        //     for (let x = this.MIN; x <= this.MAX; x++) {\r\n        //         // for player:          if (this.player.gridMap[y][x] != \"\") {\r\n\r\n        //         if (Array.isArray(this.computer.gridMap[y][x])) {\r\n        //             let coordShip = JSON.stringify({ x: x, y: y });\r\n        //             let shipSquare = document.querySelector(\r\n        //                 // for player: data-player-coord\r\n        //                 `[data-coord='${coordShip}']`\r\n        //             );\r\n\r\n        //             shipSquare.style.backgroundColor = '#2ecc71';\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        //generate options for computer attack\r\n        for (let i = 0; i < 100; i++) {\r\n            this.compAttackOptions.push(String(i).padStart(2, '0'));\r\n        }\r\n\r\n        const that = this;\r\n        let x = 0;\r\n        let y = 0;\r\n        let newCoords;\r\n        let eventTarget;\r\n\r\n        interact('.gridSnap')\r\n            .draggable({\r\n                modifiers: [\r\n                    interact.modifiers.snap({\r\n                        targets: [interact.createSnapGrid({ x: 50, y: 50 })],\r\n                        range: Infinity,\r\n                        relativePoints: [{ x: 0, y: 0 }],\r\n                        offset: 'parent',\r\n                    }),\r\n                    interact.modifiers.restrict({\r\n                        restriction: 'parent',\r\n                        elementRect: { top: 0, left: 0, bottom: 1, right: 1 },\r\n                        endOnly: true,\r\n                    }),\r\n                ],\r\n                inertia: false,\r\n            })\r\n            .on('dragmove', function(event) {\r\n                const length = event.target.getAttribute('data-length');\r\n                const direction = event.target.getAttribute('data-direction');\r\n                x += event.dx;\r\n                y += event.dy;\r\n                eventTarget = event.target;\r\n\r\n                event.target.style.webkitTransform = event.target.style.transform =\r\n                    'translate(' + x + 'px, ' + y + 'px)';\r\n                newCoords = [\r\n                    Math.round((parseInt(event.target.style.top.replace('px', '')) + y) / 50).toString() +\r\n                        Math.round((parseInt(event.target.style.left.replace('px', '')) + x) / 50).toString(),\r\n                ];\r\n\r\n                for (let i = 1; i < length; i++) {\r\n                    if (length === 1) return;\r\n                    if (direction === 'horizontal') {\r\n                        newCoords.push(\r\n                            Math.round((parseInt(event.target.style.top.replace('px', '')) + y) / 50).toString() +\r\n                                Math.round(\r\n                                    (parseInt(event.target.style.left.replace('px', '')) + x) / 50 + i\r\n                                ).toString()\r\n                        );\r\n                    } else if (direction === 'vertical') {\r\n                        newCoords.push(\r\n                            Math.round((parseInt(event.target.style.top.replace('px', '')) + y) / 50 + i).toString() +\r\n                                Math.round((parseInt(event.target.style.left.replace('px', '')) + x) / 50).toString()\r\n                        );\r\n                    }\r\n                }\r\n            })\r\n            .on('dragend', function() {\r\n                const shipID = eventTarget.getAttribute('id');\r\n                const isVertical = eventTarget.getAttribute('data-direction') == 'vertical' ? true : false;\r\n\r\n                const shipLength = Number(eventTarget.getAttribute('data-length'));\r\n                const oldX = Number(newCoords[0][1]) - Math.round(x / 50);\r\n                const oldY = Number(newCoords[0][0]) - Math.round(y / 50);\r\n                const newX = Number(newCoords[0][1]);\r\n                const newY = Number(newCoords[0][0]);\r\n\r\n                if (shipLength === 1) {\r\n                    that.player.gridMap[oldY][oldX] = '';\r\n                } else if (!isVertical) {\r\n                    for (let i = 0; i < shipLength; i++) {\r\n                        that.player.gridMap[oldY][oldX + i] = '';\r\n                    }\r\n                } else if (isVertical) {\r\n                    for (let i = 0; i < shipLength; i++) {\r\n                        that.player.gridMap[oldY + i][oldX] = '';\r\n                    }\r\n                }\r\n\r\n                that.createShip(newY, newX, that.shipFactory(shipLength), isVertical, that.player.gridMap, shipID);\r\n\r\n                event.target.attributes[3].value = newY.toString() + newX.toString();\r\n\r\n                eventTarget.style.webkitTransform = eventTarget.style.transform = 'translate(' + x + 'px, ' + y + 'px)';\r\n\r\n                x = 0;\r\n                y = 0;\r\n            });\r\n    },\r\n    methods: {\r\n        rotateShip(event) {\r\n            if (this.gameFlow.gameStarted) return;\r\n            const shipID = event.target.getAttribute('id');\r\n            let isVertical = event.target.getAttribute('data-direction') == 'vertical' ? true : false;\r\n\r\n            const shipLength = Number(event.target.getAttribute('data-length'));\r\n            const coordX = parseInt(event.target.getAttribute('data-coords')[1]);\r\n            const coordY = parseInt(event.target.getAttribute('data-coords')[0]);\r\n\r\n            if (shipLength === 1) {\r\n                return;\r\n            } else if (!isVertical) {\r\n                for (let i = 0; i < shipLength; i++) {\r\n                    this.player.gridMap[coordY][coordX + i] = '';\r\n                }\r\n            } else if (isVertical) {\r\n                for (let i = 0; i < shipLength; i++) {\r\n                    this.player.gridMap[coordY + i][coordX] = '';\r\n                }\r\n            }\r\n\r\n            isVertical = !isVertical;\r\n\r\n            this.createShip(coordY, coordX, this.shipFactory(shipLength), isVertical, this.player.gridMap, shipID);\r\n\r\n            [event.target.style.width, event.target.style.height] = [\r\n                event.target.style.height,\r\n                event.target.style.width,\r\n            ];\r\n        },\r\n        playerAttack(ele) {\r\n            if (this.gameFlow.playerTurn === true) {\r\n                ele.target.style.fontSize = 20 + 'px';\r\n                const data = JSON.parse(ele.target.dataset.coord);\r\n                const cell = this.computer.gridMap[data.y][data.x];\r\n\r\n                const index = cell[1];\r\n\r\n                // empty square is \"\"\r\n                if (cell == '') {\r\n                    ele.target.textContent = '~';\r\n                    this.gameFlow.playerTurn = false;\r\n                    this.computerAttack();\r\n                } else {\r\n                    if (Number.isInteger(index)) {\r\n                        cell[0].hit(index);\r\n                        if (cell[0].isSunk()) {\r\n                            this.compShipsAlive -= 1;\r\n\r\n                            if (this.compShipsAlive == 0) {\r\n                                this.gameFlow.gameStarted = false;\r\n                                this.gameFlow.winner = true;\r\n                                alert('You won!');\r\n                            }\r\n\r\n                            cell[0].coords.forEach((a) => {\r\n                                let coordShip = JSON.stringify({ x: a[0], y: a[1] });\r\n                                let shipSquare = document.querySelector(`[data-coord='${coordShip}']`);\r\n                                shipSquare.style.color = 'red';\r\n\r\n                                const possibleWater = [\r\n                                    { x: a[0] - 1, y: a[1] },\r\n                                    { x: a[0] + 1, y: a[1] },\r\n                                    { x: a[0], y: a[1] - 1 },\r\n                                    { x: a[0], y: a[1] + 1 },\r\n                                ];\r\n                                for (let i = 0; i < 4; i++) {\r\n                                    const x = possibleWater[i].x;\r\n                                    const y = possibleWater[i].y;\r\n                                    if (this.isCoordValid({ x, y })) {\r\n                                        // empty square is \"\"\r\n                                        if (this.computer.gridMap[y][x] === '') {\r\n                                            let coordSea = JSON.stringify(possibleWater[i]);\r\n                                            let seaSquare = document.querySelector(`[data-coord='${coordSea}']`);\r\n                                            seaSquare.textContent = '~';\r\n                                            seaSquare.style.fontSize = 20 + 'px';\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    ele.target.textContent = 'X';\r\n                }\r\n            }\r\n            return;\r\n        },\r\n        randomCoords() {\r\n            const choseOption = () => {\r\n                const index = Math.floor(Math.random() * this.compAttackOptions.length).toString();\r\n                return this.compAttackOptions[index];\r\n            };\r\n            let attackCoords = choseOption();\r\n            const x = parseInt(attackCoords[1]);\r\n            const y = parseInt(attackCoords[0]);\r\n\r\n            return { x, y };\r\n        },\r\n\r\n        computerAttack() {\r\n            this.gameFlow.playerTurn = false;\r\n            if (this.gameFlow.playerTurn) {\r\n                return;\r\n            }\r\n            let coords = this.randomCoords();\r\n            let x = coords.x;\r\n            let y = coords.y;\r\n\r\n            do {\r\n                if (this.lastSuccesfullAttack.length == 1) {\r\n                    x = this.lastSuccesfullAttack[0].x;\r\n                    y = this.lastSuccesfullAttack[0].y;\r\n                    if (this.compAttackOptions.includes(y.toString() + (x - 1).toString())) {\r\n                        x = x - 1;\r\n                    } else if (this.compAttackOptions.includes(y.toString() + (x + 1).toString())) {\r\n                        x = x + 1;\r\n                    } else if (this.compAttackOptions.includes((y - 1).toString() + x.toString())) {\r\n                        y = y - 1;\r\n                    } else if (this.compAttackOptions.includes((y + 1).toString() + x.toString())) {\r\n                        y = y + 1;\r\n                    }\r\n                } else if (this.lastSuccesfullAttack.length >= 2) {\r\n                    x = this.lastSuccesfullAttack[this.lastSuccesfullAttack.length - 1].x;\r\n                    y = this.lastSuccesfullAttack[this.lastSuccesfullAttack.length - 1].y;\r\n                    if (this.player.gridMap[y][x][0].isVertical) {\r\n                        if (this.compAttackOptions.includes((y - 1).toString() + x.toString())) {\r\n                            y = y - 1;\r\n                        } else if (this.compAttackOptions.includes((y + 1).toString() + x.toString())) {\r\n                            y = y + 1;\r\n                        } else {\r\n                            //algoritem gre proti prvemu delu ladje\r\n                            y = y + this.lastSuccesfullAttack.length;\r\n                        }\r\n                    } else if (!this.player.gridMap[y][x][0].isVertical) {\r\n                        if (this.compAttackOptions.includes(y.toString() + (x - 1).toString())) {\r\n                            x = x - 1;\r\n                        } else if (this.compAttackOptions.includes(y.toString() + (x + 1).toString())) {\r\n                            x = x + 1;\r\n                        } else {\r\n                            x = x + this.lastSuccesfullAttack.length;\r\n                        }\r\n                    }\r\n                }\r\n                if (this.player.gridMap[y][x] === '') {\r\n                    this.player.gridMap[y][x] = '~';\r\n\r\n                    this.compAttackOptions.splice(this.compAttackOptions.indexOf(y.toString() + x.toString()), 1);\r\n                    this.gameFlow.playerTurn = true;\r\n\r\n                    const coordMiss = JSON.stringify({ x, y });\r\n                    const seaSquare = document.querySelector(`[data-player-coord='${coordMiss}']`);\r\n\r\n                    seaSquare.style.border = 'solid #c0392b 3px';\r\n                    seaSquare.style.color = '#c0392b';\r\n                    seaSquare.style.fontSize = 20 + 'px';\r\n                    seaSquare.textContent = '~';\r\n\r\n                    return;\r\n                } else if (Array.isArray(this.player.gridMap[y][x])) {\r\n                    this.compAttackOptions.splice(this.compAttackOptions.indexOf(y.toString() + x.toString()), 1);\r\n                    this.player.gridMap[y][x][0].hit(this.player.gridMap[y][x][1]);\r\n                    this.lastSuccesfullAttack.push({\r\n                        x,\r\n                        y,\r\n                        part: this.player.gridMap[y][x][1],\r\n                    });\r\n\r\n                    let coordShip = JSON.stringify({ x, y });\r\n                    let shipSquare = document.querySelector(`[data-player-coord='${coordShip}']`);\r\n\r\n                    shipSquare.style.border = 'solid #c0392b 3px';\r\n                    shipSquare.style.fontSize = 20 + 'px';\r\n                    shipSquare.style.color = '#c0392b';\r\n                    shipSquare.textContent = 'X';\r\n\r\n                    if (this.player.gridMap[y][x][0].isSunk()) {\r\n                        this.lastSuccesfullAttack = [];\r\n                        this.player.gridMap[y][x][0].coords.forEach((a) => {\r\n                            coordShip = JSON.stringify({ x: a[0], y: a[1] });\r\n                            shipSquare = document.querySelector(`[data-player-coord='${coordShip}']`);\r\n\r\n                            shipSquare.style.backgroundColor = '#f1c40f';\r\n\r\n                            const possibleWater = [\r\n                                { x: a[0] - 1, y: a[1] },\r\n                                { x: a[0] + 1, y: a[1] },\r\n                                { x: a[0], y: a[1] - 1 },\r\n                                { x: a[0], y: a[1] + 1 },\r\n                            ];\r\n\r\n                            for (let i = 0; i < 4; i++) {\r\n                                const wx = possibleWater[i].x;\r\n                                const wy = possibleWater[i].y;\r\n                                if (this.isCoordValid({ x: wx, y: wy })) {\r\n                                    if (this.player.gridMap[wy][wx] === '') {\r\n                                        let coordSea = JSON.stringify(possibleWater[i]);\r\n                                        let seaSquare = document.querySelector(`[data-player-coord='${coordSea}']`);\r\n                                        seaSquare.style.border = 'solid #c0392b 3px';\r\n                                        seaSquare.style.color = '#c0392b';\r\n                                        seaSquare.textContent = '~';\r\n                                        seaSquare.style.fontSize = 20 + 'px';\r\n\r\n                                        if (this.compAttackOptions.indexOf(wy.toString() + wx.toString()) !== -1)\r\n                                            this.compAttackOptions.splice(\r\n                                                this.compAttackOptions.indexOf(wy.toString() + wx.toString()),\r\n                                                1\r\n                                            );\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                        this.playerShipsAlive -= 1;\r\n                    }\r\n                }\r\n                if (this.playerShipsAlive === 0) {\r\n                    this.gameFlow.gameStarted = false;\r\n                    this.gameFlow.winner = true;\r\n                    alert('Computer won!');\r\n                }\r\n                coords = this.randomCoords();\r\n                x = coords.x;\r\n                y = coords.y;\r\n            } while (!this.gameFlow.playerTurn);\r\n        },\r\n    },\r\n\r\n    computed: {\r\n        coords() {\r\n            const coords = [];\r\n            for (let i = this.MIN; i <= this.MAX; i++) {\r\n                for (let j = this.MIN; j <= this.MAX; j++) {\r\n                    coords.push({ x: j, y: i });\r\n                }\r\n            }\r\n            return coords;\r\n        },\r\n        keys() {\r\n            return this.coords.map((c, i) => `${JSON.stringify(c)}-${i}`);\r\n        },\r\n        stringifiedCoords() {\r\n            return this.coords.map((c) => JSON.stringify(c));\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style>\r\n.grids {\r\n    display: flex;\r\n    justify-content: space-around;\r\n}\r\n\r\n.square {\r\n    font-size: 0;\r\n    text-align: center;\r\n    line-height: 50px;\r\n    border: 1px solid black;\r\n}\r\n\r\n.computer-grid {\r\n    display: grid;\r\n    grid-template-rows: repeat(10, 50px);\r\n    grid-template-columns: repeat(10, 50px);\r\n}\r\n\r\n.fog {\r\n    z-index: 10;\r\n    background-color: aquamarine;\r\n}\r\n\r\n.place {\r\n    font-size: 0;\r\n    text-align: center;\r\n    line-height: 50px;\r\n    border: 1px solid black;\r\n}\r\n\r\n.player-grid {\r\n    display: grid;\r\n    grid-template-rows: repeat(10, 50px);\r\n    grid-template-columns: repeat(10, 50px);\r\n    position: relative;\r\n}\r\n\r\n#grid-snap {\r\n    width: 40%;\r\n    background-color: #29e;\r\n    color: #fff;\r\n    font-size: 1.2em;\r\n    border-radius: 4px;\r\n    padding: 2%;\r\n    margin: 5%;\r\n    touch-action: none;\r\n}\r\n\r\n.gridCell {\r\n    box-shadow: rgb(180, 180, 255) 1px 0px 0px 0px, rgb(180, 180, 255) 0px 1px 0px 0px,\r\n        rgb(180, 180, 255) 1px 1px 0px 0px, rgb(180, 180, 255) 1px 0px 0px 0px inset,\r\n        rgb(180, 180, 255) 0px 1px 0px 0px inset;\r\n    touch-action: none;\r\n}\r\n\r\n.ship {\r\n    position: absolute;\r\n    border: 2px solid rgb(0, 0, 255);\r\n    box-sizing: border-box;\r\n\r\n    background-color: rgba(0, 0, 255, 0.05);\r\n    z-index: 4;\r\n    touch-action: none;\r\n}\r\n\r\n.moveCursor {\r\n    cursor: move;\r\n}\r\n\r\n.active {\r\n    border: solid 5px #2ecc71;\r\n    overflow: hidden;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheGame.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheGame.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TheGame.vue?vue&type=template&id=1ea9f293&\"\nimport script from \"./TheGame.vue?vue&type=script&lang=js&\"\nexport * from \"./TheGame.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TheGame.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div id=\"container\">\r\n        <app-the-game\r\n            :gameFlow=\"gameFlow\"\r\n            :player=\"player\"\r\n            :computer=\"computer\"\r\n            :createShip=\"createShip\"\r\n            :shipFactory=\"shipFactory\"\r\n            :isCoordValid=\"isCoordValid\"\r\n            @resetGame=\"resetGame\"\r\n        ></app-the-game>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport TheGame from './components/TheGame';\r\nexport default {\r\n    data() {\r\n        return {\r\n            gameFlow: {\r\n                playerTurn: false,\r\n                placingShips: true,\r\n                gameStarted: false,\r\n                winner: false,\r\n            },\r\n            player: this.generateGrid(),\r\n            computer: this.generateGrid(),\r\n        };\r\n    },\r\n    components: {\r\n        appTheGame: TheGame,\r\n    },\r\n    methods: {\r\n        resetGame() {\r\n            this.player = this.generateGrid();\r\n            this.computer = this.generateGrid();\r\n        },\r\n        getRandomCoord() {\r\n            return Math.floor(Math.random() * 10);\r\n        },\r\n        verticalOrNot() {\r\n            return Math.random() <= 0.5;\r\n        },\r\n        shipFactory(len) {\r\n            if (len >= 4) {\r\n                len = 4;\r\n            } else if (len <= 1) {\r\n                len = 1;\r\n            } else {\r\n                len;\r\n            }\r\n            const hp = [];\r\n            hp.length = len;\r\n            hp.fill(0);\r\n\r\n            const hit = (index) => {\r\n                hp[index] = 1;\r\n            };\r\n\r\n            const isSunk = () => {\r\n                const checkTrue = (part) => {\r\n                    return part == 1;\r\n                };\r\n                return hp.every(checkTrue);\r\n            };\r\n            return { hp, len, hit, isSunk };\r\n        },\r\n        isCoordValid({ x, y }) {\r\n            const isCoordInRange = (coord) => 0 <= coord && coord <= 9;\r\n\r\n            const validateCoord = (coord) => {\r\n                if (!Number.isNaN(coord) && typeof coord === 'number') {\r\n                    return isCoordInRange(coord);\r\n                }\r\n                return false;\r\n            };\r\n            return validateCoord(x) && validateCoord(y);\r\n        },\r\n        isShipPlaceable(start, end, board, isVertical) {\r\n            if (isVertical) {\r\n                // check center\r\n                for (let i = start.y; i <= end.y; i++) {\r\n                    if (board[start.y][i] != '') {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                // check left\r\n                for (let i = start.y - 1; i <= end.y + 1; i++) {\r\n                    if (this.isCoordValid({ x: start.x - 1, y: i }) && board[i][start.x - 1] != '') {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                // check right\r\n                for (let i = start.y - 1; i <= end.y + 1; i++) {\r\n                    if (this.isCoordValid({ x: start.x + 1, y: i }) && board[i][start.x + 1] != '') {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                //check top\r\n                if (this.isCoordValid({ x: start.x, y: start.y - 1 }) && board[start.y - 1][start.x] != '') {\r\n                    return false;\r\n                }\r\n\r\n                // check bottom\r\n                if (this.isCoordValid({ x: start.x, y: end.y + 1 }) && board[end.y + 1][start.x] != '') {\r\n                    return false;\r\n                }\r\n\r\n                // if all is good\r\n                return true;\r\n            }\r\n\r\n            // horizontal position\r\n            // check center\r\n            for (let i = start.x; i <= end.x; i += 1) {\r\n                if (board[start.y][i] != '') {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            // check the top\r\n            for (let i = start.x - 1; i <= end.x + 1; i += 1) {\r\n                if (this.isCoordValid({ x: i, y: start.y - 1 }) && board[start.y - 1][i] != '') {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            // check the bottom\r\n            for (let i = start.x + 1; i <= end.x + 1; i += 1) {\r\n                if (this.isCoordValid({ x: i, y: start.y + 1 }) && board[start.y + 1][i] != '') {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            // check the left\r\n            if (this.isCoordValid({ x: start.x - 1, y: start.y }) && board[start.y][start.x - 1] != '') {\r\n                return false;\r\n            }\r\n\r\n            // check the right\r\n            if (this.isCoordValid({ x: start.x + 1, y: start.y }) && board[start.y][start.x + 1] != '') {\r\n                return false;\r\n            }\r\n\r\n            // if all is good\r\n            return true;\r\n        },\r\n        isShipValid(ship, board, { x, y }, isVertical) {\r\n            if (ship && this.isCoordValid({ x, y })) {\r\n                const startPoint = { x, y };\r\n                const endPoint = isVertical ? { x, y: y + ship.len - 1 } : { x: x + ship.len - 1, y };\r\n\r\n                return this.isCoordValid(endPoint) && this.isShipPlaceable(startPoint, endPoint, board, isVertical);\r\n            }\r\n            return false;\r\n        },\r\n        isShipReq(ship, boardInfo) {\r\n            let reqTypeShip = {\r\n                ship4: 1,\r\n                ship3: 2,\r\n                ship2: 3,\r\n                ship1: 4,\r\n            };\r\n            const shipType = `ship${ship.len}`;\r\n            return boardInfo[shipType] + 1 <= reqTypeShip[shipType];\r\n        },\r\n        createShip(y, x, ship, isVertical, board) {\r\n            const newShip = ship;\r\n\r\n            newShip.coords = [];\r\n            newShip.isVertical = isVertical;\r\n\r\n            let possibleWater;\r\n\r\n            for (let i = 0; i < ship.len; i++) {\r\n                if (isVertical == false) {\r\n                    newShip.coords[i] = [x + i, y];\r\n                    board[y][x + i] = [newShip, i];\r\n                    possibleWater = [\r\n                        { x: x + i - 1, y: y },\r\n                        { x: x + i + 1, y: y },\r\n                        { x: x + i, y: y - 1 },\r\n                        { x: x + i, y: y + 1 },\r\n                    ];\r\n\r\n                    // app crashes\r\n                    // possibleWater.forEach((ele) => {\r\n                    //     const xx = ele.x;\r\n                    //     const yy = ele.y;\r\n                    //     if (this.isCoordValid({ x: xx, y: yy }) && board[yy][xx] === '') {\r\n                    //         board[yy][xx] = '~';\r\n                    //     }\r\n                    // });\r\n                } else if (isVertical == true) {\r\n                    board[y + i][x] = [newShip, i];\r\n                    newShip.coords[i] = [x, y + i];\r\n                    possibleWater = [\r\n                        { x: x - 1, y: y + i },\r\n                        { x: x + 1, y: y + i },\r\n                        { x: x, y: y + i - 1 },\r\n                        { x: x, y: y + i + 1 },\r\n                    ];\r\n\r\n                    // possibleWater.forEach((ele) => {\r\n                    //     const xx = ele.x;\r\n                    //     const yy = ele.y;\r\n                    //     if (this.isCoordValid({ x: xx, y: yy }) && board[yy][xx] === '') {\r\n                    //         board[yy][xx] = '~';\r\n                    //     }\r\n                    // });\r\n                }\r\n            }\r\n        },\r\n        generateShips(ship, board, boardInfo, { x, y }, isVertical, id) {\r\n            if (this.isShipValid(ship, board, { x, y }, isVertical)) {\r\n                if (this.isShipReq(ship, boardInfo)) {\r\n                    this.createShip(y, x, ship, isVertical, board, id);\r\n                    const shipType = `ship${ship.len}`;\r\n                    boardInfo[shipType] += 1;\r\n                }\r\n            }\r\n        },\r\n\r\n        generateGrid() {\r\n            const gridMap = [];\r\n            for (let x = 0; x < 10; x++) {\r\n                gridMap.push([]);\r\n                for (let y = 0; y < 10; y++) {\r\n                    gridMap[x].push('');\r\n                }\r\n            }\r\n\r\n            const compShips = [4, 3, 3, 2, 2, 2, 1, 1, 1, 1];\r\n            let boardInfo = {\r\n                ship4: 0,\r\n                ship3: 0,\r\n                ship2: 0,\r\n                ship1: 0,\r\n            };\r\n            let numOfLiveShips = 0;\r\n            let ships = [];\r\n            let shipID = 0;\r\n\r\n            compShips.forEach((shipLen) => {\r\n                let x = this.getRandomCoord();\r\n                let y = this.getRandomCoord();\r\n\r\n                let isVertical = this.verticalOrNot();\r\n\r\n                while (!this.isShipValid(this.shipFactory(shipLen), gridMap, { x, y }, isVertical)) {\r\n                    x = this.getRandomCoord();\r\n                    y = this.getRandomCoord();\r\n                    isVertical = this.verticalOrNot();\r\n                }\r\n\r\n                if (this.isShipValid(this.shipFactory(shipLen), gridMap, { x, y }, isVertical)) {\r\n                    this.generateShips(this.shipFactory(shipLen), gridMap, boardInfo, { x, y }, isVertical, shipID);\r\n\r\n                    const startPoint = { x, y };\r\n                    const endPoint = isVertical ? { x, y: y + shipLen - 1 } : { x: x + shipLen - 1, y };\r\n                    ships.push({\r\n                        length: shipLen,\r\n                        direction: isVertical ? 'vertical' : 'horizontal',\r\n                        position: [startPoint, endPoint],\r\n                    });\r\n                    shipID += 1;\r\n                    numOfLiveShips += 1;\r\n                }\r\n            });\r\n            return { gridMap, ships, numOfLiveShips, boardInfo };\r\n        },\r\n    },\r\n};\r\n</script>\r\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=b7444b04&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\r\nimport App from './App.vue'\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  render: h => h(App),\r\n}).$mount('#app')\r\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheGame.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheGame.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}